#[MHAVersion 4.4]
nchannels_in = 2
fragsize = 256
srate = 48000
mhalib = overlapadd
iolib = MHAIOJack
mha.plugin_name = coherence:coh
mha.fftlen = 1024
mha.wnd.type = hanning
mha.wnd.user = []
mha.wnd.len = 512
mha.wnd.pos = 0.5
mha.wnd.exp = 1
mha.zerownd.type = rect
mha.zerownd.user = []

# parser "mha.coh":
# 
# Coherence filter
# parser "mha.coh.mhaconfig_in":
# 
# Input configuration
# parser "mha.coh.mhaconfig_out":
# 
# Output configuration
# Frequency unit
# keyword_list:[Hz kHz Oct Oct/3 Bark Erb ERB_Glasberg1990]
mha.coh.unit = Oct/3

# Frequencies
# vector<float>
mha.coh.f = [-6 -5 -4 -3 -2 -1 0 1 2 3 4 5 6 7 8 9 10 11 12]


# frequency scale of filter bank
# keyword_list:[linear bark log erb ERB_Glasberg1990]
mha.coh.fscale = linear

# filter overlap type
# keyword_list:[rect linear hanning exp gauss]
mha.coh.ovltype = hanning

# relative plateau width
# float:[0,1[
mha.coh.plateau = 0

# frequency entry type
# keyword_list:[center edge]
mha.coh.ftype = center

# tau unit
# keyword_list:[seconds periods]
mha.coh.tau_unit = seconds

# Averaging time constant
# vector<float>:[0,]
mha.coh.tau = [0.04]


# Gain exponent
# vector<float>:[0,]
#mha.coh.alpha = [0.25]
mha.coh.alpha = [0 0.5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]

# gain limit / dB (zero: no limit)
# float:[,0]
mha.coh.limit = 0

# mapping interval of coherence estimator to coherence (min max)
# vector<float>:[0,1]
mha.coh.mapping = [0 1]

# average mode
# keyword_list:[ipd spec]
mha.coh.average = ipd

# Invert filter after mapping, before exponent.
# bool
mha.coh.invert = no

# Long term gain compensation?
# bool
mha.coh.ltgcomp = no

# Long term gain estimation time constant / s
# vector<float>:[0,]
mha.coh.ltgtau = [1]

# Static gain in frequency bands / dB
# vector<float>
mha.coh.staticgain = [0]

# Delay between analysis and filter (delay of gains), in fragments.
# int:[0,]
mha.coh.delay = 0
io.servername = default
io.con_in = []
io.con_out = []
io.names_in = []
io.names_out = []
